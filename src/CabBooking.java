
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author asus
 */
public class CabBooking extends javax.swing.JFrame {

    /**
     * Creates new form CabBooking
     */
    String userName;
    //static int d2;
    //static String customerdrop2;
   //static  float famt2;
   //static String pick2;
    
    public CabBooking(String s) {
        userName=s;
        initComponents();
        this.setLocationRelativeTo(null); //centre allignment
        
        
        
        try{
         Class.forName("com.mysql.jdbc.Driver");
         Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/customerdetails","root","bits@123");
         PreparedStatement name;
         String str = ( "select cFname, cLname from cdetails where uName=?");
            name=conn.prepareStatement(str);
            name.setString(1,userName);
            name.execute();
            
            
             ResultSet rname = name.executeQuery();
        
            
            if (rname.next()) {
              
               
                hello.setText("Welcome, " + rname.getString(1) + " " + rname.getString(2));
             }
            
            } catch(ClassNotFoundException | SQLException e){
     JOptionPane.showMessageDialog(null,e);
    }
        
         
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButtonWallet = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pickup = new javax.swing.JComboBox<String>();
        jLabel4 = new javax.swing.JLabel();
        drop = new javax.swing.JComboBox<String>();
        hello = new javax.swing.JLabel();
        Price = new javax.swing.JButton();
        cnfbooking = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        TDetails = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(15, 36, 94));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 18, -1, -1));

        jButtonWallet.setBackground(new java.awt.Color(34, 167, 240));
        jButtonWallet.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jButtonWallet.setForeground(new java.awt.Color(255, 255, 255));
        jButtonWallet.setText("Wallet");
        jButtonWallet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonWalletMouseClicked(evt);
            }
        });
        jButtonWallet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWalletActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonWallet, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 30, 121, 52));

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cab Booking Portal");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jButton1.setBackground(new java.awt.Color(192, 57, 43));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Log Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 30, 130, 50));

        jButton2.setBackground(new java.awt.Color(34, 167, 240));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Profile");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 30, 180, 50));

        jButton3.setBackground(new java.awt.Color(34, 167, 240));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Ride History");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 30, 170, 50));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel3.setText("Enter Pickup Location : ");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 200, -1, -1));

        pickup.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        pickup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ameerpet", "Begumpet", "Rasoolpura", "Jubilee Hills", "Punjagutta" }));
        pickup.setRequestFocusEnabled(false);
        pickup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickupActionPerformed(evt);
            }
        });
        jPanel2.add(pickup, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, 130, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel4.setText("Enter Drop Location : ");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 310, -1, -1));

        drop.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        drop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ameerpet", "Begumpet", "Rasoolpura", "Jubilee Hills", "Punjagutta" }));
        drop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropActionPerformed(evt);
            }
        });
        jPanel2.add(drop, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 300, 130, 40));

        hello.setBackground(new java.awt.Color(255, 255, 255));
        hello.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        hello.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(hello, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, 760, 129));

        Price.setBackground(new java.awt.Color(34, 167, 240));
        Price.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        Price.setForeground(new java.awt.Color(255, 255, 255));
        Price.setText("View Fare");
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });
        jPanel2.add(Price, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 450, 190, 70));

        cnfbooking.setBackground(new java.awt.Color(34, 167, 240));
        cnfbooking.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        cnfbooking.setForeground(new java.awt.Color(255, 255, 255));
        cnfbooking.setText("Confirm Booking");
        cnfbooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnfbookingActionPerformed(evt);
            }
        });
        jPanel2.add(cnfbooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 450, 240, 70));

        jPanel3.setBackground(new java.awt.Color(96, 101, 250));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cab.png"))); // NOI18N
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 540, 550));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 840));

        TDetails.setBackground(new java.awt.Color(34, 167, 240));
        TDetails.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        TDetails.setForeground(new java.awt.Color(255, 255, 255));
        TDetails.setText("Trip Details");
        TDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TDetailsActionPerformed(evt);
            }
        });
        jPanel2.add(TDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 450, 190, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1491, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1491, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonWalletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWalletActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonWalletActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try{
         Class.forName("com.mysql.jdbc.Driver");
         Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/customerdetails","root","bits@123");
         PreparedStatement pstmt;
         String str = ( "update cdetails set LStatus = ? where uName=?");
            pstmt=conn.prepareStatement(str);
            pstmt.setInt(1,0);
            pstmt.setString(2,userName);
            pstmt.execute();
            } catch(ClassNotFoundException | SQLException e){
     JOptionPane.showMessageDialog(null,e);
    }   
        LoginPage lgp = new LoginPage();
    lgp.setVisible(true);
    lgp.pack();
    lgp.setLocationRelativeTo(null);
    lgp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropActionPerformed

    private void pickupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickupActionPerformed
    pickup.setAlignmentY(CENTER_ALIGNMENT);        // TODO add your handling code here:
    }//GEN-LAST:event_pickupActionPerformed

    private void cnfbookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnfbookingActionPerformed

        try{
           Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection conner = DriverManager.getConnection("jdbc:mysql://localhost:3306/customerdetails","root","bits@123")) {
 
            PreparedStatement psb = conner.prepareStatement("select BStatus from cdetails  where uName=?");
            psb.setString(1,userName);
            ResultSet rsb = psb.executeQuery();
            int z = 0;
            
            if (rsb.next()) {
                z = rsb.getInt(1);
            }
                if (z==1)
                {
                    JOptionPane.showMessageDialog(null,"Your ride is in progress, you cannot book a new cab ! Please click Trip Details for more information");
                }
               else
                {
    
                
         if(pickup.getSelectedItem()==drop.getSelectedItem())
         {
             JOptionPane.showMessageDialog(null,"Pickup and Drop location cannot be same");
         }
         else if (pickup.getSelectedItem() != drop.getSelectedItem())
                 {
        try{
            float famt =0;
           Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/customerdetails","root","bits@123")) {
            Connection reconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/driverdetails","root","bits@123");
            PreparedStatement refare = reconn.prepareStatement("select Price from distance  where Start= ? and End = ?");
            Object in = pickup.getSelectedItem();
            Object out = drop.getSelectedItem();
             
            String take = in.toString();
            String leave = out.toString();
                        
            refare.setString(1,take);
            refare.setString(2,leave);
            
            ResultSet newfare = refare.executeQuery();
            
            
            if (newfare.next()) {
                famt = newfare.getFloat(1);
               // System.out.println(famt);
            }
 
            PreparedStatement ps = conn.prepareStatement("select Balance from cdetails  where uName=?");
            ps.setString(1,userName);
            ResultSet rs = ps.executeQuery();
            float s = 0;
            
            if (rs.next()) {
                s = rs.getFloat(1);
            }
                if (s <  300 || s < famt )
                {
                    if (s < 300)
                    JOptionPane.showMessageDialog(null," Balance is insufficient ! Balance should be greater than 300");
                    else if(s < famt)
                    JOptionPane.showMessageDialog(null," Balance is less than Trip Fare. Please add Rs " + (famt -s) + " to start the trip");
                }
                
                
                
                else
                {
            //int a = 0;
            String b = null;
            String c = null;
            int d = 0;
            
            float min = 0;
            String tt = null;
            String rt = null;
            float rating1=0;
            Object p = pickup.getSelectedItem();
            Object destination = drop.getSelectedItem();
             
            String pick = p.toString();
            String customerdrop = destination.toString();
            try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/driverdetails","root","bits@123")) {
                
           PreparedStatement fare = con.prepareStatement("select Price from distance  where Start= ? and End = ?" );
            //Object in = pickup.getSelectedItem();
            //Object out = drop.getSelectedItem();
             
//            String take = in.toString();
//            String leave = out.toString();
                        
            fare.setString(1,take);
            fare.setString(2,leave);
            
            ResultSet rfare = fare.executeQuery();
            
            
            if (rfare.next()) {
                famt = rfare.getFloat(1);
               // System.out.println(famt);
            }    
            
             
            
            
            PreparedStatement ds = con.prepareStatement("select dLocation from drdetails  where Status = '0' " );        
           //ds.setString(1,pick);
           // ps.setString(2,drop);
           
            ResultSet rds = ds.executeQuery();
            if(!rds.next())
            {
                JOptionPane.showMessageDialog(null, "Sorry all the drivers are currently busy ! Please try to book after some time.");
            }
            else
            {
                rds.beforeFirst();
            int j=1;
            min= 5000;
            
            while(rds.next())
           
            {
            PreparedStatement dis = con.prepareStatement("select Dist from distance where Start= ? and  End = ?" );
            
            dis.setString(1,rds.getString(1));
           // System.out.println(rds.getString(1));
            dis.setString(2,pick);
            ResultSet rdt = dis.executeQuery();
            if(rdt.next()) {                
                b = rdt.getString(1);
                //System.out.println(b);
                if(Float.parseFloat(b)<min)
                {
                min=Float.parseFloat(b);               }
            }
            }
            b=Float.toString(min);
             rds.beforeFirst();
             while(rds.next())
                     {
                         //System.out.println(rds.getString(1));
                         PreparedStatement dis = con.prepareStatement("select Dist from distance where Start=? and  End = ?" );
                         dis.setString(1,rds.getString(1));
                         dis.setString(2,pick);
                         ResultSet rdt = dis.executeQuery();
                         if(rdt.next())
                         { 
                             if (Float.parseFloat(b)==(Float.parseFloat(rdt.getString(1))))
                             { 
                                System.out.println(b);
                                System.out.println(rdt.getString(1));
                                 PreparedStatement dis2 = con.prepareStatement("select dID, rating from drdetails where dLocation = ? and Status='0'" );
                                 dis2.setString(1,rds.getString(1));
                                 ResultSet rdt2 = dis2.executeQuery();
                                  while (rdt2.next()) 
                                  { System.out.println(rdt2.getFloat(2));
                                  System.out.println(rdt2.getInt(1));
                                    if(rdt2.getFloat(2)>=rating1)
                                    {
                                    rating1=rdt2.getFloat(2);
                                    d = rdt2.getInt(1);
                                    c=rds.getString(1);
                                    }
                                  } 
                             }
                        }
           // System.out.println(rds.getString(1));
            //dis.setString(2,pick);
                    
                     }
             //System.out.println(c);
             //System.out.println(d);
           /* PreparedStatement dis1 = con.prepareStatement("select Start from distance where Dist = ? and  End = ?" );
             dis1.setString(1,b);
            dis1.setString(2,pick);
            ResultSet rdt1 = dis1.executeQuery();
            if (rdt1.next()) {                
                c = rdt1.getString(1);
            }
            
            dis2.setString(1,c);
            ResultSet rdt2 = dis2.executeQuery();
            if (rdt2.next()) {                
                d = rdt2.getInt(1);
             }*/
           PreparedStatement dis2 = con.prepareStatement("update drdetails set Status = ? where dID =?" );
               
                
                //ps.setString(2,ncpwd);
                dis2.setInt(1,1);
                dis2.setInt(2,d);
                dis2.executeUpdate(); 
                PreparedStatement dis1 = con.prepareStatement("select samay from distance  where Start=? and End = ?");
                dis1.setString(1,take );
                dis1.setString(2,leave);
                ResultSet rdt3 = dis1.executeQuery();
            if (rdt3.next()) {                
                tt= rdt3.getString(1);
         
            }
            dis1 = con.prepareStatement("select samay from distance  where Start=? and End = ?");
                dis1.setString(1,c);
                dis1.setString(2,take);
                ResultSet rdt4 = dis1.executeQuery();
            if (rdt4.next()) {                
                rt= rdt4.getString(1);
            }
            PreparedStatement ps2 = conn.prepareStatement("update cdetails set BStatus=?  where uName=?"); 
            ps2.setInt(1,1);
            ps2.setString(2,userName);
            ps2.executeUpdate();
            PreparedStatement ps3 = conn.prepareStatement("update cdetails set ADriverID=?  where uName=?"); 
            ps3.setInt(1,d);
            ps3.setString(2,userName);
            ps3.executeUpdate();
            PreparedStatement ps4 = conn.prepareStatement("update cdetails set Pick=?  where uName=?"); 
            ps4.setString(1,pick);
            ps4.setString(2,userName);
            ps4.executeUpdate();
            PreparedStatement ps5 = conn.prepareStatement("update cdetails set Goal=?  where uName=?"); 
            ps5.setString(1,customerdrop);
            ps5.setString(2,userName);
            ps5.executeUpdate();
            PreparedStatement ps6 = conn.prepareStatement("update cdetails set Fare=?  where uName=?"); 
            ps6.setFloat(1,famt);
            ps6.setString(2,userName);
            ps6.executeUpdate();
            
            
            //d2=d;
            //customerdrop2=customerdrop;
            //famt2=famt;
            //pick2=pick;
            //System.out.println(d2+customerdrop2+famt2+pick2);
            if(rt.equals("0"))
            {
            JOptionPane.showMessageDialog(null,"Cab is waiting at your location","Booking Confirmed!",JOptionPane.PLAIN_MESSAGE);
            }
            else
            {
              JOptionPane.showMessageDialog(null,"Cab is reaching at your pick up location in " + rt + " minutes","Booking Confirmed!",JOptionPane.PLAIN_MESSAGE);
            }
                 Trip1 tp = new Trip1(this,d,customerdrop,famt,pick);
                    tp.setVisible(true);
                    tp.pack();
                    tp.setLocationRelativeTo(null);
                    tp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.dispose(); 
            
         
            }
            } 
                
            }
            
    
       catch(ClassNotFoundException | SQLException e)
       {
         JOptionPane.showMessageDialog(null,e);
       } 
               
                 
                    
                    
                    MyThread t=new MyThread(tt,rt,famt,d,userName,pick,customerdrop);
                    
                /*try {
                    t.join();
                } catch (InterruptedException ex) {
                    Logger.getLogger(CabBooking.class.getName()).log(Level.SEVERE, null, ex);
                }
                /*AfterTrip at = new AfterTrip(d,pick,customerdrop,famt);
                at.setVisible(true);
                at.pack();
                at.setLocationRelativeTo(null);
                at.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
                   this.dispose(); */
        }
        
        }
        
           
           }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }  
                }   } 
                                  }
            
    }
       catch(ClassNotFoundException | SQLException e)
       {
         JOptionPane.showMessageDialog(null,e);
       } 
      
    }//GEN-LAST:event_cnfbookingActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
try{
           Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/driverdetails","root","bits@123")) {
            PreparedStatement ps = conn.prepareStatement("select Price from distance  where Start= ? and End = ?" );
            
            Object p = pickup.getSelectedItem();
            Object d = drop.getSelectedItem();
             
            String pick = p.toString();
            String drop = d.toString();
            
            if(!pick.equals(drop)){
            
            ps.setString(1,pick);
            ps.setString(2,drop);
            
            ResultSet rs = ps.executeQuery();
            
            int s=0 ;
            if (rs.next()) {
                s = rs.getInt(1);
            }
                //String str = Integer.toString(s);
                JOptionPane.showMessageDialog(null,"The fare for the trip is : " + s) ;     
            }
            else 
            {
                JOptionPane.showMessageDialog(null,"Pickup and Drop location cannot be same");
            }
            }
    }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }    
    }//GEN-LAST:event_PriceActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    Profile p = new Profile(this);
    p.setVisible(true);
    p.pack();
    p.setLocationRelativeTo(null);
    p.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TDetailsActionPerformed

      try{
           Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection conner = DriverManager.getConnection("jdbc:mysql://localhost:3306/customerdetails","root","bits@123")) {
 
            PreparedStatement psb = conner.prepareStatement("select BStatus from cdetails  where uName=?");
            psb.setString(1,userName);
            ResultSet rsb = psb.executeQuery();
            int z = 0;
            
            if (rsb.next()) {
                z = rsb.getInt(1);
            }
                if (z==0)
                {
                    JOptionPane.showMessageDialog(null,"You have no booking currently!");
                }
               else
                {
            int d=0;
            String customerdrop=null;
            float famt=0;
            String pick=null;
            
            PreparedStatement p = conner.prepareStatement("select ADriverID from cdetails  where uName=?" );
            p.setString(1,userName);
            ResultSet r = p.executeQuery();
            if (r.next()) {
                d = r.getInt(1);
            }
            PreparedStatement p1 = conner.prepareStatement("select Pick from cdetails  where uName=?" );
            p1.setString(1,userName);
            ResultSet r1 = p1.executeQuery();
            if (r1.next()) {
                pick = r1.getString(1);
            }  
            PreparedStatement p2 = conner.prepareStatement("select Goal from cdetails  where uName=?" );
            p2.setString(1,userName);
            ResultSet r2 = p2.executeQuery();
            if (r2.next()) {
               customerdrop = r2.getString(1);
            }  
            PreparedStatement p3 = conner.prepareStatement("select Fare from cdetails  where uName=?" );
            p3.setString(1,userName);
            ResultSet r3 = p3.executeQuery();
            if (r3.next()) {
                famt = r3.getFloat(1);
            }  
                    
                    
                    Trip1 tp1 = new Trip1(this,d,customerdrop,famt,pick);
                
                    tp1.setVisible(true);
                    tp1.pack();
                    tp1.setLocationRelativeTo(null);
                    tp1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.dispose(); 
                }
                }
    }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }    
    }//GEN-LAST:event_TDetailsActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        RideHistory pt = new RideHistory(userName);
        pt.setVisible(true);
        pt.pack();
        pt.setLocationRelativeTo(null);
        pt.setAlwaysOnTop(true);
        pt.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose(); 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonWalletMouseClicked(java.awt.event.MouseEvent evt) {                                           
    Wallet w = new Wallet(this);
    w.setVisible(true);
    w.pack();
    w.setLocationRelativeTo(null);
    w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();    
    }                                                                                    

    /**
     * @param the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
           // public void run() {
               // new CabBooking().setVisible(true);
            //}
        //});
    //}*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Price;
    private javax.swing.JButton TDetails;
    private javax.swing.JButton cnfbooking;
    private javax.swing.JComboBox<String> drop;
    private javax.swing.JLabel hello;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonWallet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> pickup;
    // End of variables declaration//GEN-END:variables
}
class MyThread extends Thread{
    String t1,t2, uID,in,out;
    int t3,t4,driverID;
    float f =0;
    float finalamt = 0;
    int stat;
    MyThread(String tt, String rt, float famt, int d, String userName, String pick, String customerdrop)
    {  start();
        t1=tt;
        t2=rt;
        t3=Integer.parseInt(t1);
        t4=Integer.parseInt(t2);
        f = famt;
        driverID = d;
        uID = userName;
        in = pick;
        out = customerdrop;
    }
    @Override
    public void run()
    {
            try {
                Thread.sleep((t3+t4)*60*1000);
                
            }catch (InterruptedException ex) {
                Logger.getLogger(MyThread.class.getName()).log(Level.SEVERE, null, ex);
            
            
            
        
        }
        try{
           Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/driverdetails","root","bits@123")) {
            PreparedStatement sts = connection.prepareStatement("update drdetails set Status = ? where dID =?" );
     
                sts.setInt(1,0);
                sts.setInt(2,driverID);
                sts.executeUpdate(); 
                PreparedStatement sts1 = connection.prepareStatement("update drdetails set dLocation = ? where dID =?" );
     
                sts1.setString(1,out);
                sts1.setInt(2,driverID);
                sts1.executeUpdate(); 
            //new code
            PreparedStatement ps = connection.prepareStatement("select dFname, dLName ,carNo from drdetails  where dID=?");
            ps.setInt(1,driverID);
            ResultSet rs = ps.executeQuery();
        
            
            if (rs.next()) {
             try{
           Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/customerdetails","root","bits@123")) {
             PreparedStatement p0update = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,'\n') where uName =?" );    
            p0update.setString(1,uID);
            p0update.executeUpdate(); 
            
              PreparedStatement pupdate = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,?) where uName =?" );    
            pupdate.setString(1,rs.getString(1));
            pupdate.setString(2,uID);
            pupdate.executeUpdate(); 
            PreparedStatement p2update = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,?) where uName =?" );    
            p2update.setString(1," "+rs.getString(2));
            p2update.setString(2,uID);
            p2update.executeUpdate(); 
            PreparedStatement p3update = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,?) where uName =?" );    
            p3update.setString(1,"    "+rs.getString(3));
            p3update.setString(2,uID);
            p3update.executeUpdate(); 
            
            PreparedStatement p4update = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,?) where uName =?" );    
            p4update.setString(1,"    "+in);
            p4update.setString(2,uID);
            p4update.executeUpdate(); 
            
            PreparedStatement p5update = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,?) where uName =?" );    
            p5update.setString(1,"    "+out);
            p5update.setString(2,uID);
            p5update.executeUpdate(); 
            
            PreparedStatement p6update = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,?) where uName =?" );    
            p6update.setString(1,"    "+f);
            p6update.setString(2,uID);
            p6update.executeUpdate(); 
             }
              
            
            }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
           
            }
             //newcodend   
                }
            }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        try{
           Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/customerdetails","root","bits@123")) {
            PreparedStatement balance = connect.prepareStatement("select Balance from cdetails  where uName=?");
            balance.setString(1,uID);
            ResultSet rbalance = balance.executeQuery();
                
            if (rbalance.next()) {
            finalamt = rbalance.getFloat(1);
                         
            }
            PreparedStatement bupdate = connect.prepareStatement("update cdetails set Balance = ? where uName =?" );
     
                bupdate.setFloat(1,finalamt-f);
                bupdate.setString(2,uID);
                bupdate.executeUpdate(); 
            PreparedStatement supdate = connect.prepareStatement("update cdetails set BStatus = ? where uName =?" );
                supdate.setInt(1,0);
                supdate.setString(2,uID);
                supdate.executeUpdate(); 
           
                
             
           // PreparedStatement pupdate = connect.prepareStatement("update cdetails set PTrips=concat(PTrips,?) where uName =?" );    
          //  pupdate.setInt(1,driverID);
           // pupdate.setString(2,uID);
            //pupdate.executeUpdate(); 
            
             for(; ;)
        {  
            balance = connect.prepareStatement("select LStatus from cdetails  where uName=?");
            balance.setString(1,uID);
            ResultSet rb = balance.executeQuery();
                
            if (rb.next()) {
            stat = rb.getInt(1);
            }
           if(stat==1)
            {
                break;
                
            }
        }
        AfterTrip at = new AfterTrip(driverID,in,out,f,finalamt-f,t1,uID);
        at.setVisible(true);
        at.pack();
        at.setLocationRelativeTo(null);
        at.setAlwaysOnTop(true);
        at.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            
            
        
        }
              
            
            }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
     
        //this.dispose();
        
        
        
       
    }

   
}
